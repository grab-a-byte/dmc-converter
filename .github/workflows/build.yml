# https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go
name: Go package

on:
  push:
    branches: ["main", "develop"]

  workflow_dispatch:

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18

      - name : Download Deps
        run: go mod download

      - name: Build
        run: go build -v

      - name: üì¶ Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: linux-x86-dmc-convert
          path: ./dmc-convert

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v0.1 #${{ github.ref }}
          release_name: Release v0.1 #${{ github.ref }}
          draft: true
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./dmc-convert
          asset_name: dmc-convert-linux
          asset_content_type: application/vnd.debian.binary-package

  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18

      - name : Download Deps
        run: go mod download

      - name: Build
        run: go build -v

      - name: üì¶ Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: windows-x86-dmc-convert.exe
          path: ./dmc-convert.exe

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v0.1 #${{ github.ref }}
          release_name: Release v0.1 #${{ github.ref }}
          draft: true
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./dmc-convert.exe
          asset_name: dmc-convert-windows.exe
          asset_content_type: application/vnd.microsoft.portable-executable